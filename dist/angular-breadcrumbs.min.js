/**
 * Easy to use Breadcrumbs for AngularJS
 * @version v0.0.1 - 2015-01-07 * @link https://github.com/jacobscarter/angular-breadcrumbs
 * @author Jacob Carter <jacob@ieksolutions.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
angular.module("templates-jscBreadcrumbs",["template.html"]),angular.module("template.html",[]).run(["$templateCache",function(a){a.put("template.html",'<div class="back-button" ng-hide="hide" ng-click="backButton()" class="menu-link">\n	<p>back</p>\n</div>')}]);var jscBreadcrumbs=angular.module("jscBreadcrumbs",["templates-jscBreadcrumbs"]);jscBreadcrumbs.directive("breadcrumbs",["$rootScope","$log","$state","$stateParams","JSCBreadcrumbs",function(a,b,c,d,e){return{restrict:"E",scope:!0,replace:!0,templateUrl:"template.html",link:function(f){function g(a){sessionStorage.setItem("jscBreadcrumbs",JSON.stringify(a))}function h(){i=JSON.parse(sessionStorage.getItem("jscBreadcrumbs"))}var i,j=[];i=sessionStorage.getItem("jscBreadcrumbs")&&angular.isArray(JSON.parse(sessionStorage.getItem("jscBreadcrumbs")))?JSON.parse(sessionStorage.getItem("jscBreadcrumbs")):[],d.breadcrumbs&&d.breadcrumbs.doNotShow===!0&&(e.breadcrumbData.hide=!0),f.hide=e.breadcrumbData.hide,console.warn("breadcrumb hide value before statechangestart! ",f.hide),a.$on("$stateChangeStart",function(a,c,d,g,h){sessionStorage.getItem("jscBreadcrumbs")&&angular.isArray(JSON.parse(sessionStorage.getItem("jscBreadcrumbs")))&&(i=JSON.parse(sessionStorage.getItem("jscBreadcrumbs")),console.warn("entered if statement to reset breadcrumbs based off what is stored in sessionStorage: ",i)),b.warn("breadcrumbs directive statechange arguments ",c,d,g,h);for(var k in j)g.name===j[k]&&(i.length=0,console.warn("this is a reset state, we are resetting breadcrumbs! ",i));d.breadcrumbs&&d.breadcrumbs.doNotShow===!0?(e.breadcrumbData.hide=!0,f.hide=e.breadcrumbData.hide,b.warn("entered doNotShow if statement",f.hide)):(e.breadcrumbData.hide=!1,f.hide=e.breadcrumbData.hide,b.warn("did not enter doNotShow if statement, should be false",f.hide)),console.warn("about to push to breadcrumbs array if both args are true: ",g.name.length>0),g.name.length>0&&(i.push({state:g,params:h}),firstLoop=!1),h.breadcrumbs&&h.breadcrumbs.doNotStore&&(b.log("removing breadcrumb that should not be stored - BEFORE REMOVAL: ",angular.copy(i)),f.breadcrumbPop()),sessionStorage.setItem("jscBreadcrumbs",JSON.stringify(i)),0===i.length&&(console.warn("breadcrumbs length is 0 so hiding"),e.breadcrumbData.hide=!0,f.hide=e.breadcrumbData.hide)}),f.breadcrumbPop=function(){i.pop(),g(i)},f.backButton=function(){h();var a=i[i.length-1];b.log("breadcrumbObject ",a.state.name,a.params),c.go(a.state.name,a.params),i.splice(i.length-2,2),b.log("NEW breadcrumbs array : ",i),sessionStorage.setItem("jscBreadcrumbs",JSON.stringify(i)),0===i.length&&(e.breadcrumbData.hide=!0,f.hide=e.breadcrumbData.hide=!0,sessionStorage.removeItem("jscBreadcrumbs"))}}}}]),jscBreadcrumbs.factory("JSCBreadcrumbs",["$rootScope","$state","$log","$timeout",function(){var a=[],b={};b.hide=!1;var c=function(){a=JSON.parse(sessionStorage.getItem("jscBreadcrumbs")),console.log("breadcrumb being popped off in Menu: ",a),a.pop(),console.log("breadcrumb AFTER being popped off in Menu: ",a),sessionStorage.setItem("jscBreadcrumbs",JSON.stringify(a))};return{breadcrumbs:a,breadcrumbsPop:c,breadcrumbData:b}}]);